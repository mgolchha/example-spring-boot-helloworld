name: Java CI with Gradle

on:
  push:
    branches:
      - master
    tags:
      - 'v*' # Push events
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Gradle wrapper
      run: ./gradlew build
    - name: Run app and test health
      run: |
        BOOT_WAIT_SECONDS=10
        LOG_FILE=app.log

        # start app in background
        java -jar build/libs/springboots2idemo-*.jar > $LOG_FILE 2>&1 &

        # wait for server start and test health
        sleep $BOOT_WAIT_SECONDS
        HEALTH=$(curl http://localhost:9000/health)

        # stop app
        PID=$(ps -ef | grep "springboots2idemo-" | grep -v grep | awk '{ print $2 }')
        if [ -z "$PID" ]
        then
            echo App is already stopped or did not start
            exit 1
        else
            echo "stop app (kill $PID)"
            kill $PID
        fi

        # print app logs
        echo "-- logs --"
        cat $LOG_FILE
        rm -f $LOG_FILE

        # test app health
        echo "-- test --"
        if [ "$HEALTH" = '{"status":"UP"}' ]; then
            echo "App started healthy"
        else
            echo "App not healthy"
            exit 1
        fi
    - name: Get the version
      id: vars
      run: echo ::set-output name=tag::$(echo ${GITHUB_SHA:10})
    
    - name: Docker login
      env:
        DOCKER_USERNAME: ${{ secrets.dockerhub_username }}
        DOCKER_PASSWORD: ${{ secrets.dockerhub_password }}
      run : docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD" docker.io
    
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{secrets.docker_username}}/${{secrets.repo_name}}:${{steps.vars.outputs.tag}}
   
    - name: Publish dockerimage to docker hub
      run: docker push ${{secrets.docker_username}}/${{secrets.repo_name}}:${{steps.vars.outputs.tag}}
    
    - name: Build Docker image with latest tag
      run: docker build . --file Dockerfile --tag ${{secrets.docker_username}}/${{secrets.repo_name}}latest
    
    - name: Publish dockerimage to docker hub
      run: docker push ${{secrets.docker_username}}/${{secrets.repo_name}}:latest
